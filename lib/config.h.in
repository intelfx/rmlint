#ifndef RM_CONFIG_H
#define RM_CONFIG_H

#define INSTALL_PREFIX "{INSTALL_PREFIX}"

#define HAVE_BLKID         ({HAVE_BLKID})
#define HAVE_LIBINTL       ({HAVE_LIBINTL})
#define HAVE_LIBELF        ({HAVE_LIBELF})
#define HAVE_GIO_UNIX      ({HAVE_GIO_UNIX})
#define HAVE_FIEMAP        ({HAVE_FIEMAP})
#define HAVE_XATTR         ({HAVE_XATTR})
#define HAVE_LXATTR        ({HAVE_LXATTR})
#define HAVE_SHA512        ({HAVE_SHA512})
#define HAVE_BIGFILES      ({HAVE_BIGFILES})
#define HAVE_STAT64        ({HAVE_STAT64})
#define HAVE_BIG_OFF_T     ({HAVE_BIG_OFF_T})
#define HAVE_SYSBLOCK      ({HAVE_SYSBLOCK})
#define HAVE_LINUX_LIMITS  ({HAVE_LINUX_LIMITS})
#define HAVE_POSIX_FADVISE ({HAVE_POSIX_FADVISE})
#define HAVE_BTRFS_H       ({HAVE_BTRFS_H})
#define HAVE_LINUX_FS_H    ({HAVE_LINUX_FS_H})
#define HAVE_UNAME         ({HAVE_UNAME})
#define HAVE_SYSMACROS_H   ({HAVE_SYSMACROS_H})
#define HAVE_STDNORETURN_H ({HAVE_STDNORETURN_H})
#define HAVE_MM_CRC32_U64  ({HAVE_MM_CRC32_U64})
#define HAVE_BUILTIN_CPU_SUPPORTS ({HAVE_BUILTIN_CPU_SUPPORTS})

/* define here so rmlint and hash utility can both access */
#define RM_DEFAULT_DIGEST RM_DIGEST_BLAKE2B

#define RM_VERSION "{VERSION_MAJOR}.{VERSION_MINOR}.{VERSION_PATCH}"
#define RM_VERSION_MAJOR {VERSION_MAJOR}
#define RM_VERSION_MINOR {VERSION_MINOR}
#define RM_VERSION_PATCH {VERSION_PATCH}
#define RM_VERSION_NAME  "{VERSION_NAME}"
#define RM_VERSION_GIT_REVISION "{VERSION_GIT_REVISION}"

#define RM_MANPAGE_USE_PAGER (1)

/* Might come in useful */
#define RM_CHECK_VERSION(X,Y,Z) (0  \
    || X <= RM_VERSION_MAJOR        \
    || Y <= RM_VERSION_MINOR        \
    || Z <= RM_VERSION_MICRO        \
)


#if HAVE_LINUX_LIMITS
#include <linux/limits.h>
#else
# ifndef PATH_MAX
#  define PATH_MAX 4096
# endif
#endif

#define _UNUSED G_GNUC_UNUSED
#define LLU G_GUINT64_FORMAT
#define LLI G_GINT64_FORMAT


#include <stdint.h> /* for UINTPTR_MAX */
#define RM_PLATFORM_32 (UINTPTR_MAX == 0xffffffff)
#define RM_PLATFORM_64 (UINTPTR_MAX == 0xffffffffffffffff)

#if defined(__APPLE__) && defined(__MACH__)
# define RM_IS_APPLE 1
#else
# define RM_IS_APPLE 0
#endif

#ifdef __CYGWIN__
# define RM_IS_CYGWIN 1
#else
# define RM_IS_CYGWIN 0
#endif

#include <glib.h>

/* Printf formatting for large integers */

#define RM_GETTEXT_PACKAGE "rmlint"

#if HAVE_LIBINTL
#  define _(String) gettext (String)
#  define gettext_noop(String) String
#  define N_(String) gettext_noop (String)
#  include <libintl.h>
#else
#  define _(String) (String)
#  define gettext_noop(String) String
#  define N_(String) gettext_noop (String)
#endif

typedef guint64 RmOff;

#ifdef RM_DEBUG
    #undef NDEBUG
#else
    #ifndef NDEBUG
        #define NDEBUG
    #endif
    #ifdef __GNUC__
        #define INLINE inline __attribute__((__always_inline__))
    #elif defined(__clang__)
        #if __has_attribute(__always_inline__)
            #define INLINE inline __attribute__((__always_inline__))
        #endif
    #elif defined(_MSC_VER)
        #define INLINE __forceinline
    #endif
#endif

#ifndef INLINE
    #define INLINE inline
#endif

#ifdef __GNUC__
    #define WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#elif defined(__clang__)
    #define WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
    /* give up */
    #define WARN_UNUSED_RESULT
#endif

#define _RM_OFFSET_DEBUG 0

#if HAVE_STDNORETURN_H
    #include <stdnoreturn.h>
#endif

#ifdef noreturn
    #define NORETURN noreturn
#elif defined(__GNUC__) || defined(__clang__)
    #define NORETURN __attribute__((__noreturn__))
#elif defined(_MSC_VER)
    #define NORETURN __declspec(noreturn)
#else
    #define noreturn
#endif

#endif
